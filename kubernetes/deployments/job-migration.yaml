apiVersion: batch/v1
kind: Job
metadata:
  name: job-migration
spec:
  template:
    spec:
      containers:
        - name: django-migration-container
          image: gcr.io/pipeline-tutorial-231718/pipeline:7bdba3abf3be675a9c4c99cbf3409544e2d46cde
          #command: ['python', 'manage.py', 'migrate']
          command: ["/bin/sh"]
          args: ["-c", "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"]
          #command: ["touch /hello.txt"]
          ports:
          - containerPort: 8000
          # Set env variables used for Postgres Connection
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: POSTGRES_HOST
              value: "localhost"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: dbname
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=pipeline-tutorial-231718:us-west1-c:postgres-server2=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: my-secrets-volume
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: my-secrets-volume
          secret:
            secretName: cloudsql-instance-credentials
      restartPolicy: Never
  backoffLimit: 5
